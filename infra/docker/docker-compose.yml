version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: quixzap-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DB_MAIN:-quick_connect}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT:-3307}:${MYSQL_CONTAINER_PORT:-3306}"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD:-root}",
        ]
      interval: 10s
      timeout: 15s # Increased
      retries: 15 # Increased
      start_period: 60s # Increased for MySQL startup
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: quixzap-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword}
    ports:
      - "${REDIS_PORT:-6380}:${REDIS_CONTAINER_PORT:-6379}"
    volumes:
      - redis_data:/data
    healthcheck:
      test:
        ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redispassword}", "ping"]
      interval: 10s
      timeout: 15s # Increased
      retries: 15 # Increased
      start_period: 30s
    networks:
      - app-network

  quixzap-app:
    container_name: quixzap-app
    build:
      context: .. # Project root
      dockerfile: docker/Dockerfile
      target: production
    restart: unless-stopped
    env_file:
      - ../.env
    environment:
      - MYSQL_HOST=${MYSQL_HOST:-quixzap-mysql}
      - MYSQL_PORT=${MYSQL_CONTAINER_PORT:-3306}
      - REDIS_ADDR=${REDIS_HOST:-quixzap-redis}:${REDIS_CONTAINER_PORT:-6379}
      - APP_PORT=${APP_PORT:-8081}
      - CLIENT_ORIGIN=${CLIENT_ORIGIN:-http://localhost:3000}
      - ENVIRONMENT=${ENVIRONMENT:-DEVELOPMENT}
      - IS_LIVE=${IS_LIVE:-false}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${APP_PORT:-8081}:8081"
    volumes:
      - ../logs:/app/logs
      - ../.env:/app/.env
    networks:
      - app-network

  # quixzap-consumer:
  #   container_name: quixzap-consumer
  #   build:
  #     context: ..
  #     dockerfile: docker/Dockerfile
  #     target: consumer
  #   restart: unless-stopped
  #   env_file:
  #     - ../.env
  #   environment:
  #     - MYSQL_HOST=${MYSQL_HOST:-quixzap-mysql}
  #     - MYSQL_PORT=${MYSQL_CONTAINER_PORT:-3306}
  #     - REDIS_ADDR=${REDIS_HOST:-quixzap-redis}:${REDIS_CONTAINER_PORT:-6379}
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   volumes:
  #     - ../logs:/app/logs
  #     - ../.env:/app/.env
  #   networks:
  #     - app-network

volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge
